{{- if and .Values.ingress.enabled .Values.service.enabled }}
{{- $svcPort := 0 }}
{{- range $k, $v := .Values.service.ports }}
{{- if eq ($svcPort | toString) "0" }}
{{- if or (eq $k "http") (eq $k "grpc") }}{{- $svcPort = $v }}{{- end }}
{{- end }}
{{- end }}
{{- if ne ($svcPort | toString) "0" }}
{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
  annotations:
    {{- include "app.ingress.annotations" . | nindent 4 }}
spec:
  {{- with .Values.ingress.className }}
  ingressClassName: {{ . }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          {{- range (default (list "/") $.Values.ingress.paths) }}
          - path: {{ . | quote }}
            pathType: ImplementationSpecific
            backend:
              {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
              service:
                name: {{ include "app.fullname" $ }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ include "app.fullname" $ }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
{{- end }}
